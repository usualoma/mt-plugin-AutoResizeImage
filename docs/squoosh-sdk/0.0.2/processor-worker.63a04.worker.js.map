{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/codecs/util.ts","webpack:///./node_modules/comlink/comlink.js","webpack:///./src/codecs/processor-worker/index.ts","webpack:///./src/codecs/resize/processor-meta.ts"],"names":["self","chunkIds","moreModules","moduleId","modules","length","installedChunks","pop","installedModules","8","installedWasmModules","wasmImportObjects","7","__webpack_require__","exports","module","i","l","call","e","chunkId","promises","push","Promise","resolve","then","importScripts","0","1","2","3","4","5","6","forEach","wasmModuleId","installedWasmModuleData","promise","importObject","req","fetch","p","WebAssembly","compileStreaming","all","items","instantiate","instantiateStreaming","x","arrayBuffer","bytes","res","w","instance","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","s","initEmscriptenModule","moduleFactory","wasmUrl","noInitialRun","locateFile","url","endsWith","[object Object]","clamp","opts","Math","min","max","Number","MIN_VALUE","MAX_VALUE","__webpack_exports__","proxyValueSymbol","TRANSFERABLE_TYPES","filter","f","map","uid","floor","random","MAX_SAFE_INTEGER","throwSymbol","transferHandlers","Map","canHandle","serialize","obj","port1","port2","MessageChannel","expose","deserialize","endpoint","target","isWindow","windowEndpoint","isEndpoint","Error","activateEndpoint","cbProxy","cb","callPath","Proxy","construct","_target","argumentsList","proxy","type","apply","_thisArg","slice","concat","set","_proxy","async","irequest","args","wrapValue","unwrapValue","msg","transferables","id","pingPongMessageCounter","attachMessageHandler","handler","event","data","removeEventListener","detachMessageHandler","assign","postMessage","pingPongMessage","transferableProperties","message","stack","rootObj","that","reduce","propName","iresult","proxyVal","proxyValue","transferHandler","makeInvocationResult","arg","wrappedChildren","item","iterateAllProperties","path","wrappedValue","wrappedChild","has","isRawWrappedValue","wrappedChildValue","join","newValue","replaceValueInObjectAtPath","newVal","lastKey","constructor","addEventListener","transfer","isMessagePort","start","every","prop","isTransferable","thing","some","visited","WeakSet","add","ArrayBuffer","isView","keys","mozjpegEncode","options","encode","quantize","process","rotate","resize","method","isHqx","hqx","widthRatio","width","heightRatio","height","ratio","factor","util","ceil","optiPngEncode","compress","webpEncode","webpDecode","decode"],"mappings":"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","file":"processor-worker.63a04.worker.js","sourcesContent":[" \tself[\"webpackChunk\"] = function webpackChunkCallback(chunkIds, moreModules) {\n \t\tfor(var moduleId in moreModules) {\n \t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t}\n \t\twhile(chunkIds.length)\n \t\t\tinstalledChunks[chunkIds.pop()] = 1;\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded chunks\n \t// \"1\" means \"already loaded\"\n \tvar installedChunks = {\n \t\t8: 1\n \t};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \tfunction promiseResolve() { return Promise.resolve(); }\n\n \tvar wasmImportObjects = {\n \t\t7: function() {\n \t\t\treturn {\n\n \t\t\t};\n \t\t},\n \t\t8: function() {\n \t\t\treturn {\n\n \t\t\t};\n \t\t},\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n \t\tpromises.push(Promise.resolve().then(function() {\n \t\t\t// \"1\" is the signal for \"already loaded\"\n \t\t\tif(!installedChunks[chunkId]) {\n \t\t\t\timportScripts(\"\" + ({\"0\":\"process-hqx\",\"1\":\"process-imagequant\",\"2\":\"process-mozjpeg-enc\",\"3\":\"process-optipng\",\"4\":\"process-resize\",\"5\":\"process-rotate\",\"6\":\"process-webp-dec\",\"7\":\"process-webp-enc\"}[chunkId]||chunkId) + \".\" + {\"0\":\"686f5\",\"1\":\"f6db1\",\"2\":\"cc257\",\"3\":\"c2a0e\",\"4\":\"21fc8\",\"5\":\"d9d76\",\"6\":\"1244a\",\"7\":\"315f5\"}[chunkId] + \".worker.js\");\n \t\t\t}\n \t\t}));\n\n \t\t// Fetch + compile chunk loading for webassembly\n\n \t\tvar wasmModules = {\"0\":[7],\"4\":[8]}[chunkId] || [];\n\n \t\twasmModules.forEach(function(wasmModuleId) {\n \t\t\tvar installedWasmModuleData = installedWasmModules[wasmModuleId];\n\n \t\t\t// a Promise means \"currently loading\" or \"already loaded\".\n \t\t\tif(installedWasmModuleData)\n \t\t\t\tpromises.push(installedWasmModuleData);\n \t\t\telse {\n \t\t\t\tvar importObject = wasmImportObjects[wasmModuleId]();\n \t\t\t\tvar req = fetch(__webpack_require__.p + \"\" + {\"7\":\"8c087e0290bb39f1e090\",\"8\":\"bb9bb638551198cd3a42\"}[wasmModuleId] + \".module.wasm\");\n \t\t\t\tvar promise;\n \t\t\t\tif(importObject instanceof Promise && typeof WebAssembly.compileStreaming === 'function') {\n \t\t\t\t\tpromise = Promise.all([WebAssembly.compileStreaming(req), importObject]).then(function(items) {\n \t\t\t\t\t\treturn WebAssembly.instantiate(items[0], items[1]);\n \t\t\t\t\t});\n \t\t\t\t} else if(typeof WebAssembly.instantiateStreaming === 'function') {\n \t\t\t\t\tpromise = WebAssembly.instantiateStreaming(req, importObject);\n \t\t\t\t} else {\n \t\t\t\t\tvar bytesPromise = req.then(function(x) { return x.arrayBuffer(); });\n \t\t\t\t\tpromise = bytesPromise.then(function(bytes) {\n \t\t\t\t\t\treturn WebAssembly.instantiate(bytes, importObject);\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t\tpromises.push(installedWasmModules[wasmModuleId] = promise.then(function(res) {\n \t\t\t\t\treturn __webpack_require__.w[wasmModuleId] = (res.instance || res).exports;\n \t\t\t\t}));\n \t\t\t}\n \t\t});\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/mt-plugin-Squoosh/squoosh-sdk/0.0.2/\";\n\n \t// object with all WebAssembly.instance exports\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","type ModuleFactory<M extends EmscriptenWasm.Module> = (\n  opts: EmscriptenWasm.ModuleOpts,\n) => M;\n\nexport function initEmscriptenModule<T extends EmscriptenWasm.Module>(\n  moduleFactory: ModuleFactory<T>,\n  wasmUrl: string,\n): Promise<T> {\n  return new Promise((resolve) => {\n    const module = moduleFactory({\n      // Just to be safe, don't automatically invoke any wasm functions\n      noInitialRun: true,\n      locateFile(url: string): string {\n        // Redirect the request for the wasm binary to whatever webpack gave us.\n        if (url.endsWith('.wasm')) return wasmUrl;\n        return url;\n      },\n      onRuntimeInitialized() {\n        // An Emscripten is a then-able that resolves with itself, causing an infite loop when you\n        // wrap it in a real promise. Delete the `then` prop solves this for now.\n        // https://github.com/kripken/emscripten/issues/5820\n        delete (module as any).then;\n        resolve(module);\n      },\n    });\n  });\n}\n\ninterface ClampOpts {\n  min?: number;\n  max?: number;\n}\n\nexport function clamp(x: number, opts: ClampOpts): number {\n  return Math.min(Math.max(x, opts.min || Number.MIN_VALUE), opts.max || Number.MAX_VALUE);\n}\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Symbol that gets added to objects by `Comlink.proxy()`.\n */\nexport const proxyValueSymbol = Symbol(\"comlinkProxyValue\");\n/**\n * Returns true if the given value has the proxy value symbol added to it.\n */\nconst isProxyValue = (value) => !!value && value[proxyValueSymbol] === true;\nconst TRANSFERABLE_TYPES = [\"ArrayBuffer\", \"MessagePort\", \"OffscreenCanvas\"]\n    .filter(f => f in self)\n    .map(f => self[f]);\nconst uid = Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\nconst throwSymbol = Symbol(\"throw\");\nconst proxyTransferHandler = {\n    canHandle: isProxyValue,\n    serialize: (obj) => {\n        const { port1, port2 } = new MessageChannel();\n        expose(obj, port1);\n        return port2;\n    },\n    deserialize: (obj) => {\n        return proxy(obj);\n    }\n};\nconst throwTransferHandler = {\n    canHandle: (obj) => obj && obj[throwSymbol],\n    serialize: (obj) => {\n        const message = obj && obj.message;\n        const stack = obj && obj.stack;\n        return Object.assign({}, obj, { message, stack });\n    },\n    deserialize: (obj) => {\n        throw Object.assign(Error(), obj);\n    }\n};\nexport const transferHandlers = new Map([\n    [\"PROXY\", proxyTransferHandler],\n    [\"THROW\", throwTransferHandler]\n]);\nlet pingPongMessageCounter = 0;\nexport function proxy(endpoint, target) {\n    if (isWindow(endpoint))\n        endpoint = windowEndpoint(endpoint);\n    if (!isEndpoint(endpoint))\n        throw Error(\"endpoint does not have all of addEventListener, removeEventListener and postMessage defined\");\n    activateEndpoint(endpoint);\n    return cbProxy(async (irequest) => {\n        let args = [];\n        if (irequest.type === \"APPLY\" || irequest.type === \"CONSTRUCT\")\n            args = irequest.argumentsList.map(wrapValue);\n        const response = await pingPongMessage(endpoint, Object.assign({}, irequest, { argumentsList: args }), transferableProperties(args));\n        const result = response.data;\n        return unwrapValue(result.value);\n    }, [], target);\n}\nexport function proxyValue(obj) {\n    const proxyVal = obj;\n    proxyVal[proxyValueSymbol] = true;\n    return proxyVal;\n}\nexport function expose(rootObj, endpoint) {\n    if (isWindow(endpoint))\n        endpoint = windowEndpoint(endpoint);\n    if (!isEndpoint(endpoint))\n        throw Error(\"endpoint does not have all of addEventListener, removeEventListener and postMessage defined\");\n    activateEndpoint(endpoint);\n    attachMessageHandler(endpoint, async function (event) {\n        if (!event.data.id || !event.data.callPath)\n            return;\n        const irequest = event.data;\n        let that = await irequest.callPath\n            .slice(0, -1)\n            .reduce((obj, propName) => obj[propName], rootObj);\n        let obj = await irequest.callPath.reduce((obj, propName) => obj[propName], rootObj);\n        let iresult = obj;\n        let args = [];\n        if (irequest.type === \"APPLY\" || irequest.type === \"CONSTRUCT\")\n            args = irequest.argumentsList.map(unwrapValue);\n        if (irequest.type === \"APPLY\") {\n            try {\n                iresult = await obj.apply(that, args);\n            }\n            catch (e) {\n                iresult = e;\n                iresult[throwSymbol] = true;\n            }\n        }\n        if (irequest.type === \"CONSTRUCT\") {\n            try {\n                iresult = new obj(...args); // eslint-disable-line new-cap\n                iresult = proxyValue(iresult);\n            }\n            catch (e) {\n                iresult = e;\n                iresult[throwSymbol] = true;\n            }\n        }\n        if (irequest.type === \"SET\") {\n            obj[irequest.property] = irequest.value;\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n            iresult = true;\n        }\n        iresult = makeInvocationResult(iresult);\n        iresult.id = irequest.id;\n        return endpoint.postMessage(iresult, transferableProperties([iresult]));\n    });\n}\nfunction wrapValue(arg) {\n    // Is arg itself handled by a TransferHandler?\n    for (const [key, transferHandler] of transferHandlers) {\n        if (transferHandler.canHandle(arg)) {\n            return {\n                type: key,\n                value: transferHandler.serialize(arg)\n            };\n        }\n    }\n    // If not, traverse the entire object and find handled values.\n    let wrappedChildren = [];\n    for (const item of iterateAllProperties(arg)) {\n        for (const [key, transferHandler] of transferHandlers) {\n            if (transferHandler.canHandle(item.value)) {\n                wrappedChildren.push({\n                    path: item.path,\n                    wrappedValue: {\n                        type: key,\n                        value: transferHandler.serialize(item.value)\n                    }\n                });\n            }\n        }\n    }\n    for (const wrappedChild of wrappedChildren) {\n        const container = wrappedChild.path\n            .slice(0, -1)\n            .reduce((obj, key) => obj[key], arg);\n        container[wrappedChild.path[wrappedChild.path.length - 1]] = null;\n    }\n    return {\n        type: \"RAW\",\n        value: arg,\n        wrappedChildren\n    };\n}\nfunction unwrapValue(arg) {\n    if (transferHandlers.has(arg.type)) {\n        const transferHandler = transferHandlers.get(arg.type);\n        return transferHandler.deserialize(arg.value);\n    }\n    else if (isRawWrappedValue(arg)) {\n        for (const wrappedChildValue of arg.wrappedChildren || []) {\n            if (!transferHandlers.has(wrappedChildValue.wrappedValue.type))\n                throw Error(`Unknown value type \"${arg.type}\" at ${wrappedChildValue.path.join(\".\")}`);\n            const transferHandler = transferHandlers.get(wrappedChildValue.wrappedValue.type);\n            const newValue = transferHandler.deserialize(wrappedChildValue.wrappedValue.value);\n            replaceValueInObjectAtPath(arg.value, wrappedChildValue.path, newValue);\n        }\n        return arg.value;\n    }\n    else {\n        throw Error(`Unknown value type \"${arg.type}\"`);\n    }\n}\nfunction replaceValueInObjectAtPath(obj, path, newVal) {\n    const lastKey = path.slice(-1)[0];\n    const lastObj = path\n        .slice(0, -1)\n        .reduce((obj, key) => obj[key], obj);\n    lastObj[lastKey] = newVal;\n}\nfunction isRawWrappedValue(arg) {\n    return arg.type === \"RAW\";\n}\nfunction windowEndpoint(w) {\n    if (self.constructor.name !== \"Window\")\n        throw Error(\"self is not a window\");\n    return {\n        addEventListener: self.addEventListener.bind(self),\n        removeEventListener: self.removeEventListener.bind(self),\n        postMessage: (msg, transfer) => w.postMessage(msg, \"*\", transfer)\n    };\n}\nfunction isEndpoint(endpoint) {\n    return (\"addEventListener\" in endpoint &&\n        \"removeEventListener\" in endpoint &&\n        \"postMessage\" in endpoint);\n}\nfunction activateEndpoint(endpoint) {\n    if (isMessagePort(endpoint))\n        endpoint.start();\n}\nfunction attachMessageHandler(endpoint, f) {\n    // Checking all possible types of `endpoint` manually satisfies TypeScript’s\n    // type checker. Not sure why the inference is failing here. Since it’s\n    // unnecessary code I’m going to resort to `any` for now.\n    // if(isWorker(endpoint))\n    //   endpoint.addEventListener('message', f);\n    // if(isMessagePort(endpoint))\n    //   endpoint.addEventListener('message', f);\n    // if(isOtherWindow(endpoint))\n    //   endpoint.addEventListener('message', f);\n    endpoint.addEventListener(\"message\", f);\n}\nfunction detachMessageHandler(endpoint, f) {\n    // Same as above.\n    endpoint.removeEventListener(\"message\", f);\n}\nfunction isMessagePort(endpoint) {\n    return endpoint.constructor.name === \"MessagePort\";\n}\nfunction isWindow(endpoint) {\n    // TODO: This doesn’t work on cross-origin iframes.\n    // return endpoint.constructor.name === 'Window';\n    return [\"window\", \"length\", \"location\", \"parent\", \"opener\"].every(prop => prop in endpoint);\n}\n/**\n * `pingPongMessage` sends a `postMessage` and waits for a reply. Replies are\n * identified by a unique id that is attached to the payload.\n */\nfunction pingPongMessage(endpoint, msg, transferables) {\n    const id = `${uid}-${pingPongMessageCounter++}`;\n    return new Promise(resolve => {\n        attachMessageHandler(endpoint, function handler(event) {\n            if (event.data.id !== id)\n                return;\n            detachMessageHandler(endpoint, handler);\n            resolve(event);\n        });\n        // Copy msg and add `id` property\n        msg = Object.assign({}, msg, { id });\n        endpoint.postMessage(msg, transferables);\n    });\n}\nfunction cbProxy(cb, callPath = [], target = function () { }) {\n    return new Proxy(target, {\n        construct(_target, argumentsList, proxy) {\n            return cb({\n                type: \"CONSTRUCT\",\n                callPath,\n                argumentsList\n            });\n        },\n        apply(_target, _thisArg, argumentsList) {\n            // We use `bind` as an indicator to have a remote function bound locally.\n            // The actual target for `bind()` is currently ignored.\n            if (callPath[callPath.length - 1] === \"bind\")\n                return cbProxy(cb, callPath.slice(0, -1));\n            return cb({\n                type: \"APPLY\",\n                callPath,\n                argumentsList\n            });\n        },\n        get(_target, property, proxy) {\n            if (property === \"then\" && callPath.length === 0) {\n                return { then: () => proxy };\n            }\n            else if (property === \"then\") {\n                const r = cb({\n                    type: \"GET\",\n                    callPath\n                });\n                return Promise.resolve(r).then.bind(r);\n            }\n            else {\n                return cbProxy(cb, callPath.concat(property), _target[property]);\n            }\n        },\n        set(_target, property, value, _proxy) {\n            return cb({\n                type: \"SET\",\n                callPath,\n                property,\n                value\n            });\n        }\n    });\n}\nfunction isTransferable(thing) {\n    return TRANSFERABLE_TYPES.some(type => thing instanceof type);\n}\nfunction* iterateAllProperties(value, path = [], visited = null) {\n    if (!value)\n        return;\n    if (!visited)\n        visited = new WeakSet();\n    if (visited.has(value))\n        return;\n    if (typeof value === \"string\")\n        return;\n    if (typeof value === \"object\")\n        visited.add(value);\n    if (ArrayBuffer.isView(value))\n        return;\n    yield { value, path };\n    const keys = Object.keys(value);\n    for (const key of keys)\n        yield* iterateAllProperties(value[key], [...path, key], visited);\n}\nfunction transferableProperties(obj) {\n    const r = [];\n    for (const prop of iterateAllProperties(obj)) {\n        if (isTransferable(prop.value))\n            r.push(prop.value);\n    }\n    return r;\n}\nfunction makeInvocationResult(obj) {\n    for (const [type, transferHandler] of transferHandlers) {\n        if (transferHandler.canHandle(obj)) {\n            const value = transferHandler.serialize(obj);\n            return {\n                value: { type, value }\n            };\n        }\n    }\n    return {\n        value: {\n            type: \"RAW\",\n            value: obj\n        }\n    };\n}\n","import { expose } from 'comlink';\nimport { isHqx } from '../resize/processor-meta';\nimport { clamp } from '../util';\nasync function mozjpegEncode(data, options) {\n    const { encode } = await import(\n    /* webpackChunkName: \"process-mozjpeg-enc\" */\n    '../mozjpeg/encoder');\n    return encode(data, options);\n}\nasync function quantize(data, opts) {\n    const { process } = await import(\n    /* webpackChunkName: \"process-imagequant\" */\n    '../imagequant/processor');\n    return process(data, opts);\n}\nasync function rotate(data, opts) {\n    const { rotate } = await import(\n    /* webpackChunkName: \"process-rotate\" */\n    '../rotate/processor');\n    return rotate(data, opts);\n}\nasync function resize(data, opts) {\n    if (isHqx(opts)) {\n        const { hqx } = await import(\n        /* webpackChunkName: \"process-hqx\" */\n        '../hqx/processor');\n        const widthRatio = opts.width / data.width;\n        const heightRatio = opts.height / data.height;\n        const ratio = Math.max(widthRatio, heightRatio);\n        if (ratio <= 1)\n            return data;\n        const factor = clamp(Math.ceil(ratio), { min: 2, max: 4 });\n        return hqx(data, { factor });\n    }\n    const { resize } = await import(\n    /* webpackChunkName: \"process-resize\" */\n    '../resize/processor');\n    return resize(data, opts);\n}\nasync function optiPngEncode(data, options) {\n    const { compress } = await import(\n    /* webpackChunkName: \"process-optipng\" */\n    '../optipng/encoder');\n    return compress(data, options);\n}\nasync function webpEncode(data, options) {\n    const { encode } = await import(\n    /* webpackChunkName: \"process-webp-enc\" */\n    '../webp/encoder');\n    return encode(data, options);\n}\nasync function webpDecode(data) {\n    const { decode } = await import(\n    /* webpackChunkName: \"process-webp-dec\" */\n    '../webp/decoder');\n    return decode(data);\n}\nconst exports = {\n    mozjpegEncode,\n    quantize,\n    rotate,\n    resize,\n    optiPngEncode,\n    webpEncode,\n    webpDecode,\n};\nexpose(exports, self);\n","type BrowserResizeMethods =\n  | 'browser-pixelated'\n  | 'browser-low'\n  | 'browser-medium'\n  | 'browser-high';\ntype WorkerResizeMethods =\n  | 'triangle'\n  | 'catrom'\n  | 'mitchell'\n  | 'lanczos3'\n  | 'hqx';\nconst workerResizeMethods: WorkerResizeMethods[] = [\n  'triangle',\n  'catrom',\n  'mitchell',\n  'lanczos3',\n  'hqx',\n];\n\nexport type ResizeOptions =\n  | BrowserResizeOptions\n  | WorkerResizeOptions\n  | VectorResizeOptions;\n\nexport interface ResizeOptionsCommon {\n  width: number;\n  height: number;\n  fitMethod: 'stretch' | 'contain';\n}\n\nexport interface BrowserResizeOptions extends ResizeOptionsCommon {\n  method: BrowserResizeMethods;\n}\n\nexport interface WorkerResizeOptions extends ResizeOptionsCommon {\n  method: WorkerResizeMethods;\n  premultiply: boolean;\n  linearRGB: boolean;\n}\n\nexport interface VectorResizeOptions extends ResizeOptionsCommon {\n  method: 'vector';\n}\n\n/**\n * Return whether a set of options are worker resize options.\n *\n * @param opts\n */\nexport function isWorkerOptions(\n  opts: ResizeOptions,\n): opts is WorkerResizeOptions {\n  return (workerResizeMethods as string[]).includes(opts.method);\n}\n\n/**\n * Return whether a set of options are from the HQ<n>X set\n *\n * @param opts\n */\nexport function isHqx(opts: ResizeOptions): opts is WorkerResizeOptions {\n  return opts.method === 'hqx';\n}\n\nexport const defaultOptions: ResizeOptions = {\n  // Width and height will always default to the image size.\n  // This is set elsewhere.\n  width: 1,\n  height: 1,\n  // This will be set to 'vector' if the input is SVG.\n  method: 'lanczos3',\n  fitMethod: 'stretch',\n  premultiply: true,\n  linearRGB: true,\n};\n"],"sourceRoot":""}